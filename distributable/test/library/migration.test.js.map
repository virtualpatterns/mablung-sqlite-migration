{"version":3,"sources":["../../../source/test/library/migration.test.js"],"names":["FileSystem","Path","Test","Migration","before","test","databasePath","ensureDir","dirname","context","serial","migration","getMigration","is","length","name","isInstalled","installMigration","uninstallMigration"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,UAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;;AAEA,SAASC,SAAT,QAA0B,gBAA1B;;AAEAD,IAAI,CAACE,MAAL,CAAY,MAAOC,IAAP,IAAgB;;AAE1B,MAAIC,YAAY,GAAG,sBAAnB;AACA,QAAMN,UAAU,CAACO,SAAX,CAAqBN,IAAI,CAACO,OAAL,CAAaF,YAAb,CAArB,CAAN;;AAEAD,EAAAA,IAAI,CAACI,OAAL,CAAaH,YAAb,GAA4BA,YAA5B;;AAED,CAPD;;AASAJ,IAAI,CAACQ,MAAL,CAAY,sCAAZ,EAAoD,MAAOL,IAAP,IAAgB;;AAElE,MAAIM,SAAS,GAAG,MAAMR,SAAS,CAACS,YAAV,CAAuBP,IAAI,CAACI,OAAL,CAAaH,YAApC,CAAtB;;AAEAD,EAAAA,IAAI,CAACQ,EAAL,CAAQF,SAAS,CAACG,MAAlB,EAA0B,CAA1B;;AAEAT,EAAAA,IAAI,CAACQ,EAAL,CAAQF,SAAS,CAAC,CAAD,CAAT,CAAaI,IAArB,EAA2B,uCAA3B;AACAV,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,KAA1C;AACAX,EAAAA,IAAI,CAACQ,EAAL,CAAQF,SAAS,CAAC,CAAD,CAAT,CAAaI,IAArB,EAA2B,uCAA3B;AACAV,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,KAA1C;;AAED,CAXD;;AAaAd,IAAI,CAACQ,MAAL,CAAY,0CAAZ,EAAwD,MAAOL,IAAP,IAAgB;;AAEtE,QAAMF,SAAS,CAACc,gBAAV,CAA2BZ,IAAI,CAACI,OAAL,CAAaH,YAAxC,CAAN;;AAEA,MAAIK,SAAS,GAAG,MAAMR,SAAS,CAACS,YAAV,CAAuBP,IAAI,CAACI,OAAL,CAAaH,YAApC,CAAtB;;AAEAD,EAAAA,IAAI,CAACQ,EAAL,CAAQF,SAAS,CAACG,MAAlB,EAA0B,CAA1B;;AAEAT,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,IAA1C;AACAX,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,IAA1C;;AAED,CAXD;;AAaAd,IAAI,CAACQ,MAAL,CAAY,4CAAZ,EAA0D,MAAOL,IAAP,IAAgB;;AAExE,QAAMF,SAAS,CAACe,kBAAV,CAA6Bb,IAAI,CAACI,OAAL,CAAaH,YAA1C,CAAN;;AAEA,MAAIK,SAAS,GAAG,MAAMR,SAAS,CAACS,YAAV,CAAuBP,IAAI,CAACI,OAAL,CAAaH,YAApC,CAAtB;;AAEAD,EAAAA,IAAI,CAACQ,EAAL,CAAQF,SAAS,CAACG,MAAlB,EAA0B,CAA1B;;AAEAT,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,KAA1C;AACAX,EAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAMF,SAAS,CAAC,CAAD,CAAT,CAAaK,WAAb,EAAd,EAA0C,KAA1C;;AAED,CAXD","sourcesContent":["import FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Test from 'ava'\n\nimport { Migration } from '../../index.js'\n\nTest.before(async (test) => {\n\n  let databasePath = 'process/data/data.db'\n  await FileSystem.ensureDir(Path.dirname(databasePath))\n\n  test.context.databasePath = databasePath\n\n})\n\nTest.serial('Migration.getMigration(databasePath)', async (test) => {\n\n  let migration = await Migration.getMigration(test.context.databasePath)\n\n  test.is(migration.length, 2)\n  \n  test.is(migration[0].name, '00000000000010-create-table-migration')\n  test.is(await migration[0].isInstalled(), false)\n  test.is(migration[1].name, '00000000000020-create-index-migration')\n  test.is(await migration[1].isInstalled(), false)\n\n})\n\nTest.serial('Migration.installMigration(databasePath)', async (test) => {\n\n  await Migration.installMigration(test.context.databasePath)\n\n  let migration = await Migration.getMigration(test.context.databasePath)\n\n  test.is(migration.length, 2)\n\n  test.is(await migration[0].isInstalled(), true)\n  test.is(await migration[1].isInstalled(), true)\n\n})\n\nTest.serial('Migration.uninstallMigration(databasePath)', async (test) => {\n\n  await Migration.uninstallMigration(test.context.databasePath)\n\n  let migration = await Migration.getMigration(test.context.databasePath)\n\n  test.is(migration.length, 2)\n\n  test.is(await migration[0].isInstalled(), false)\n  test.is(await migration[1].isInstalled(), false)\n\n})\n"],"file":"migration.test.js"}