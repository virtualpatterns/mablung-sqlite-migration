{"version":3,"sources":["../../../source/test/library/database.test.js"],"names":["FileSystem","Path","Test","Database","Migration","test","databasePath","ensureDir","dirname","installMigration","database","open","numberOfChanges","title","is","close","uninstallMigration","explanation","explainIndexMigration","log","detail"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,UAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEAF,IAAI,CAAC,oCAAD,EAAuC,MAAOG,IAAP,IAAgB;;AAEzD,MAAIC,YAAY,GAAG,qBAAnB;AACA,QAAMN,UAAU,CAACO,SAAX,CAAqBN,IAAI,CAACO,OAAL,CAAaF,YAAb,CAArB,CAAN;;AAEA,QAAMF,SAAS,CAACK,gBAAV,CAA2BH,YAA3B,CAAN;;AAEA,MAAI;;AAEF,QAAII,QAAQ,GAAG,IAAIP,QAAJ,CAAaG,YAAb,CAAf;;AAEA,UAAMI,QAAQ,CAACC,IAAT,EAAN;;AAEA,QAAI;;AAEF,UAAI,EAAEC,eAAF,KAAsB,MAAMF,QAAQ,CAACD,gBAAT,CAA0BJ,IAAI,CAACQ,KAA/B,CAAhC;;AAEAR,MAAAA,IAAI,CAACS,EAAL,CAAQF,eAAR,EAAyB,CAAzB;;AAED,KAND,SAMU;AACR,YAAMF,QAAQ,CAACK,KAAT,EAAN;AACD;;AAEF,GAhBD,SAgBU;AACR,UAAMX,SAAS,CAACY,kBAAV,CAA6BV,YAA7B,CAAN;AACD;;AAEF,CA3BG,CAAJ;;AA6BAJ,IAAI,CAAC,kCAAD,EAAqC,MAAOG,IAAP,IAAgB;;AAEvD,MAAIC,YAAY,GAAG,uCAAnB;AACA,QAAMN,UAAU,CAACO,SAAX,CAAqBN,IAAI,CAACO,OAAL,CAAaF,YAAb,CAArB,CAAN;;AAEA,QAAMF,SAAS,CAACK,gBAAV,CAA2BH,YAA3B,CAAN;;AAEA,MAAI;;AAEF,QAAII,QAAQ,GAAG,IAAIP,QAAJ,CAAaG,YAAb,CAAf;;AAEA,UAAMI,QAAQ,CAACC,IAAT,EAAN;;AAEA,QAAI;;AAEF,UAAIM,WAAW,GAAG,MAAMP,QAAQ,CAACQ,qBAAT,CAA+B,gBAA/B,CAAxB;;AAEAb,MAAAA,IAAI,CAACc,GAAL,CAASF,WAAW,CAAC,CAAD,CAAX,CAAeG,MAAxB;AACAf,MAAAA,IAAI,CAACS,EAAL,CAAQG,WAAW,CAAC,CAAD,CAAX,CAAeG,MAAvB,EAA+B,qEAA/B;;AAED,KAPD,SAOU;AACR,YAAMV,QAAQ,CAACK,KAAT,EAAN;AACD;;AAEF,GAjBD,SAiBU;AACR,UAAMX,SAAS,CAACY,kBAAV,CAA6BV,YAA7B,CAAN;AACD;;AAEF,CA5BG,CAAJ","sourcesContent":["import FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Test from 'ava'\n\nimport { Database } from './database.js'\nimport { Migration } from './migration.js'\n\nTest('Database.run(statement, parameter)', async (test) => {\n\n  let databasePath = 'process/data/run.db'\n  await FileSystem.ensureDir(Path.dirname(databasePath))\n\n  await Migration.installMigration(databasePath)\n\n  try {\n    \n    let database = new Database(databasePath)\n\n    await database.open()\n\n    try {\n      \n      let { numberOfChanges } = await database.installMigration(test.title)\n\n      test.is(numberOfChanges, 1)\n\n    } finally {\n      await database.close()\n    }\n\n  } finally {\n    await Migration.uninstallMigration(databasePath)\n  }\n\n})\n\nTest('Database.explainIndexMigration()', async (test) => {\n\n  let databasePath = 'process/data/explainIndexMigration.db'\n  await FileSystem.ensureDir(Path.dirname(databasePath))\n\n  await Migration.installMigration(databasePath)\n\n  try {\n    \n    let database = new Database(databasePath)\n\n    await database.open()\n\n    try {\n\n      let explanation = await database.explainIndexMigration('migrationIndex')\n\n      test.log(explanation[0].detail)\n      test.is(explanation[0].detail, 'SEARCH TABLE migration USING COVERING INDEX migrationIndex (name=?)')\n\n    } finally {\n      await database.close()\n    }\n\n  } finally {\n    await Migration.uninstallMigration(databasePath)\n  }\n\n})\n"],"file":"database.test.js"}